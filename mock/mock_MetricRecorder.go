// Code generated by MockGen. DO NOT EDIT.
// Source: ./o11y/o11y.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMetricRecorder is a mock of MetricRecorder interface
type MockMetricRecorder struct {
	ctrl     *gomock.Controller
	recorder *MockMetricRecorderMockRecorder
}

// MockMetricRecorderMockRecorder is the mock recorder for MockMetricRecorder
type MockMetricRecorderMockRecorder struct {
	mock *MockMetricRecorder
}

// NewMockMetricRecorder creates a new mock instance
func NewMockMetricRecorder(ctrl *gomock.Controller) *MockMetricRecorder {
	mock := &MockMetricRecorder{ctrl: ctrl}
	mock.recorder = &MockMetricRecorderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMetricRecorder) EXPECT() *MockMetricRecorderMockRecorder {
	return m.recorder
}

// IncreasePushLogSuccess mocks base method
func (m *MockMetricRecorder) IncreasePushLogSuccess(app_group string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncreasePushLogSuccess", app_group)
}

// IncreasePushLogSuccess indicates an expected call of IncreasePushLogSuccess
func (mr *MockMetricRecorderMockRecorder) IncreasePushLogSuccess(app_group interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreasePushLogSuccess", reflect.TypeOf((*MockMetricRecorder)(nil).IncreasePushLogSuccess), app_group)
}

// IncreasePushLogFailed mocks base method
func (m *MockMetricRecorder) IncreasePushLogFailed(app_group string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "IncreasePushLogFailed", app_group)
}

// IncreasePushLogFailed indicates an expected call of IncreasePushLogFailed
func (mr *MockMetricRecorderMockRecorder) IncreasePushLogFailed(app_group interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncreasePushLogFailed", reflect.TypeOf((*MockMetricRecorder)(nil).IncreasePushLogFailed), app_group)
}
